#pragma once

#include "nlohmann/json.hpp"

{% for class in classes %}
    {% if truthy(class.attributes, "json") and not truthy(class.attributes, "json.values.ignore") %}
        {% if truthy(class.namespace) %}
            namespace {{ class.namespace }}
            {
        {% endif %}
            {% if class.is_template %}
                template < {# #}
                    {% for template_param in class.template_params %}
                        {{ template_param.type }} {{ template_param.name }} {% if not loop.is_last %}, {% endif %}
                    {% endfor %}
                > {# #}
            {% else %}
                inline
            {% endif %}
            void to_json([[maybe_unused]] nlohmann::json& json, [[maybe_unused]] const {% if truthy(class.parent_classes) %} {{ class.parent_classes }}:: {% endif %} {{ class.name }}& value)
            {
                {% for field in class.fields %}
                    {% if not truthy(field.attributes, "json.values.ignore") %}
                        {% if truthy(field.attributes, "json.values.name") %}
                            json["{{ field.attributes.json.values.name }}"] = value.{{ field.name }};
                        {% else %}
                            json["{{ field.name }}"] = value.{{ field.name }};
                        {% endif %}
                    {% endif %}
                {% endfor %}
            }

            {% if class.is_template %}
                template < {# #}
                    {% for template_param in class.template_params %}
                        {{ template_param.type }} {{ template_param.name }} {% if not loop.is_last %}, {% endif %}
                    {% endfor %}
                > {# #}
            {% else %}
                inline
            {% endif %}
            void from_json([[maybe_unused]] const nlohmann::json& json, [[maybe_unused]] {% if truthy(class.parent_classes) %} {{ class.parent_classes }}:: {% endif %} {{ class.name }}& value)
            {
                {% for field in class.fields %}
                    {% if not truthy(field.attributes, "json.values.ignore") %}
                        {% if truthy(field.attributes, "json.values.name") %}
                            json["{{ field.attributes.json.values.name }}"].get_to(value.{{ field.name }});
                        {% else %}
                            json["{{ field.name }}"].get_to(value.{{ field.name }});
                        {% endif %}
                    {% endif %}
                {% endfor %}
            }
        {% if truthy(class.namespace) %}
            }

        {% endif %}
    {% endif %}
{% endfor %}
